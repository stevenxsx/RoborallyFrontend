{"ast":null,"code":"import axios from \"axios\";\n\nclass GameApi {\n  constructor() {\n    this.BACKEND_URL = \"http://localhost:8080\";\n  }\n\n  static getInstance() {\n    if (!GameApi.instance) {\n      GameApi.instance = new GameApi();\n    }\n\n    return GameApi.instance;\n  }\n\n  getBoard(boardId) {\n    return axios.get(`${this.BACKEND_URL}/board/${boardId}`).then(value => value.data);\n  }\n\n  moveCurrentPlayer(boardId, space) {\n    return axios.put(`${this.BACKEND_URL}/board/${boardId}/move`, space);\n  }\n\n  switchPlayer(boardId) {\n    return axios.put(`${this.BACKEND_URL}/board/${boardId}/switchplayer`);\n  }\n\n}\n\nGameApi.instance = void 0;\nexport default GameApi.getInstance();","map":{"version":3,"sources":["C:/Users/Shroom/IdeaProjects/RoborallyFrontend/roborally_frontend/src/api/GameApi.ts"],"names":["axios","GameApi","constructor","BACKEND_URL","getInstance","instance","getBoard","boardId","get","then","value","data","moveCurrentPlayer","space","put","switchPlayer"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAIA,MAAMC,OAAN,CAAa;AAGDC,EAAAA,WAAW,GAAG;AAAA,SADLC,WACK,GADS,uBACT;AAAE;;AAEC,SAAXC,WAAW,GAAU;AAC/B,QAAG,CAACH,OAAO,CAACI,QAAZ,EAAqB;AACjBJ,MAAAA,OAAO,CAACI,QAAR,GAAmB,IAAIJ,OAAJ,EAAnB;AACH;;AACD,WAAOA,OAAO,CAACI,QAAf;AACH;;AAEMC,EAAAA,QAAQ,CAACC,OAAD,EAAkB;AAC7B,WAAOP,KAAK,CAACQ,GAAN,CAAkB,GAAE,KAAKL,WAAY,UAASI,OAAQ,EAAtD,EAAyDE,IAAzD,CAA8DC,KAAK,IAAGA,KAAK,CAACC,IAA5E,CAAP;AACH;;AAEMC,EAAAA,iBAAiB,CAACL,OAAD,EAAmBM,KAAnB,EAAiC;AACrD,WAAOb,KAAK,CAACc,GAAN,CAAW,GAAE,KAAKX,WAAY,UAASI,OAAQ,OAA/C,EAAsDM,KAAtD,CAAP;AACH;;AAEME,EAAAA,YAAY,CAACR,OAAD,EAAkB;AACjC,WAAOP,KAAK,CAACc,GAAN,CAAW,GAAE,KAAKX,WAAY,UAASI,OAAQ,eAA/C,CAAP;AACH;;AAtBQ;;AAAPN,O,CACaI,Q;AAwBnB,eAAeJ,OAAO,CAACG,WAAR,EAAf","sourcesContent":["import axios from \"axios\";\nimport {Board} from \"../types/Board\";\nimport {Space} from \"../types/Space\";\n\nclass GameApi{\n    private static instance : GameApi;\n    private readonly BACKEND_URL = \"http://localhost:8080\"\n    private constructor() {}\n\n    public static getInstance():GameApi{\n        if(!GameApi.instance){\n            GameApi.instance = new GameApi();\n        }\n        return GameApi.instance;\n    }\n\n    public getBoard(boardId : number){\n        return axios.get<Board>(`${this.BACKEND_URL}/board/${boardId}`).then(value =>value.data)\n    }\n\n    public moveCurrentPlayer(boardId : number, space : Space){\n        return axios.put(`${this.BACKEND_URL}/board/${boardId}/move`,space)\n    }\n\n    public switchPlayer(boardId : number){\n        return axios.put(`${this.BACKEND_URL}/board/${boardId}/switchplayer`)\n    }\n}\n\nexport default GameApi.getInstance()"]},"metadata":{},"sourceType":"module"}