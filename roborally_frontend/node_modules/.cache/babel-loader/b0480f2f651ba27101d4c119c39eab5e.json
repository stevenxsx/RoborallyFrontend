{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shroom\\\\IdeaProjects\\\\RoborallyFrontend\\\\roborally_frontend\\\\src\\\\components\\\\GamesComponent.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from 'react';\nimport GameContext from \"../context/GameContext\";\nimport { GameComponent } from \"./GameComponent\";\nimport styles from \"../styling/BoardComponent.module.scss\"; //Import css module\n\nimport { Typography, Button, TextField } from \"@material-ui/core\";\n/**\n * @author s205444, Lucas\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst GamesComponent = () => {\n  _s();\n\n  const {\n    games,\n    loaded\n  } = useContext(GameContext);\n  const {\n    createGame\n  } = useContext(GameContext);\n  const {\n    user\n  } = useContext(GameContext);\n  const {\n    validateUser\n  } = useContext(GameContext);\n  const [inputName, setinputName] = useState('');\n  const [userInputName, setUserInputName] = useState('');\n\n  const handleClick = () => {\n    console.log(\"new game name: \" + inputName);\n    createGame(inputName);\n  };\n\n  const userClick = () => {\n    validateUser(userInputName);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"everything\",\n    children: !loaded ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.centerHori,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          children: \"RoboRally Gruppe 07\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: \"New game:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            className: styles.centerButtons,\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              variant: \"outlined\",\n              margin: \"normal\",\n              required: true,\n              name: \"inputName\",\n              label: \"Game name\",\n              type: \"inputName\",\n              id: \"inputName\",\n              autoComplete: \"current-inputName\",\n              value: inputName,\n              onChange: event => {\n                setinputName(event.target.value);\n              } //whenever the text field change, you save the value in state\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleClick,\n              children: \"New game\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            className: styles.centerButtons,\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              variant: \"outlined\",\n              margin: \"normal\",\n              name: \"inputUser\",\n              label: \"User name\",\n              type: \"inputUser\",\n              id: \"inputUser\",\n              autoComplete: \"current-inputUser\",\n              value: userInputName,\n              onChange: event => {\n                setUserInputName(event.target.value);\n              } //whenever the text field change, you save the value in state\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: userClick,\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          children: [\"Current user: \", user.playerName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        children: \"Games\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.container,\n        children: games.map((game, index) => /*#__PURE__*/_jsxDEV(GameComponent, {\n          game: game\n        }, \"game\" + index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 33\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 21\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n\n_s(GamesComponent, \"zwgEtw9cbS3qL1IabS0ajaOQmFQ=\");\n\n_c = GamesComponent;\nexport default GamesComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"GamesComponent\");","map":{"version":3,"sources":["C:/Users/Shroom/IdeaProjects/RoborallyFrontend/roborally_frontend/src/components/GamesComponent.tsx"],"names":["React","useContext","useState","GameContext","GameComponent","styles","Typography","Button","TextField","GamesComponent","games","loaded","createGame","user","validateUser","inputName","setinputName","userInputName","setUserInputName","handleClick","console","log","userClick","centerHori","centerButtons","event","target","value","playerName","container","map","game","index"],"mappings":"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","sourcesContent":["import React, {FunctionComponent, useContext, useMemo, useState} from 'react';\nimport GameContext from \"../context/GameContext\";\nimport { GameComponent } from \"./GameComponent\";\nimport styles from \"../styling/BoardComponent.module.scss\" //Import css module\nimport { Typography, Button, TextField } from \"@material-ui/core\";\n\n\n/**\n * @author s205444, Lucas\n */\n\n\ntype GamesComponentProps = {\n\n}\nconst GamesComponent: FunctionComponent<GamesComponentProps> = () => {\n\n    const { games, loaded } = useContext(GameContext)\n    const { createGame } = useContext(GameContext)\n    const {user} = useContext(GameContext)\n    const {validateUser} = useContext(GameContext)\n\n    const [inputName, setinputName] = useState('')\n\n    const [userInputName, setUserInputName] = useState('')\n\n\n\n\n\n\n\n    const handleClick = () => {\n        console.log(\"new game name: \" + inputName)\n        createGame(inputName)\n    };\n\n    const userClick = () => {\n        validateUser(userInputName)\n    }\n\n    return (\n        <div id=\"everything\">\n            {\n                !loaded ?\n                    <div>\n                        <div className={styles.centerHori}>\n                            <Typography variant=\"h4\">RoboRally Gruppe 07</Typography>\n                            <br />\n                            <div>\n                                <Typography variant=\"h6\">New game:</Typography>\n                                <form className={styles.centerButtons}>\n                                    <TextField\n                                        variant=\"outlined\"\n                                        margin=\"normal\"\n                                        required\n                                        name=\"inputName\"\n                                        label=\"Game name\"\n                                        type=\"inputName\"\n                                        id=\"inputName\"\n                                        autoComplete=\"current-inputName\"\n                                        value={inputName}\n                                        onChange={(event) => { setinputName(event.target.value) }} //whenever the text field change, you save the value in state\n                                    />\n                                    <button\n                                        onClick={handleClick}\n                                    >\n                                        New game\n                                    </button>\n                                </form>\n                            </div>\n                            <div>\n                                <form className={styles.centerButtons}>\n                                    <TextField\n                                        variant=\"outlined\"\n                                        margin=\"normal\"\n                                        name=\"inputUser\"\n                                        label=\"User name\"\n                                        type=\"inputUser\"\n                                        id=\"inputUser\"\n                                        autoComplete=\"current-inputUser\"\n                                        value={userInputName}\n                                        onChange={(event) => { setUserInputName(event.target.value) }} //whenever the text field change, you save the value in state\n                                    />\n                                    <Button\n                                        onClick={userClick}\n                                    >\n                                        Login\n                                    </Button>\n                                </form>\n                            </div>\n                            <Typography variant=\"body1\">Current user: {user.playerName}</Typography>\n                            <div>\n                            </div>\n                            <br />\n                            <br />\n\n                        </div>\n                        <Typography variant=\"h5\">Games</Typography>\n\n                        <div className={styles.container} >\n                            {games.map((game, index) =>\n                                <GameComponent key={\"game\" + index} game={game} />\n                            )\n                            }\n                        </div>\n\n                    </div >\n                    :\n                    <div />\n            }\n        </div >\n    )\n}\n\nexport default GamesComponent\n\n\n"]},"metadata":{},"sourceType":"module"}