{"ast":null,"code":"import { createContext } from \"react\";\n//Define a new context of type GameContextType\n//Below we define the \"default\" values which are set upon initialization of the context\nconst GameContext = /*#__PURE__*/createContext({\n  games: [],\n  selectGame: async () => {},\n  deleteGame: async () => {},\n  unselectGame: async () => {},\n  startGame: async () => {},\n  endGame: async () => {},\n  createGame: async () => {},\n  createPlayer: async () => {},\n  loaded: false,\n  board: {\n    playerDtos: [],\n    spaceDtos: [],\n    boardId: -1,\n    boardName: \"\",\n    currentPlayerDto: undefined,\n    height: 0,\n    width: 0\n  },\n  setCurrentPlayerOnSpace: async () => {},\n  switchCurrentPlayer: async () => {},\n  user: {\n    playerId: 0,\n    playerName: \"x\"\n  },\n  validateUser: async () => {},\n  changeUserID: async () => {},\n  setCurrentPlayerInBackend: async () => {},\n  addUserToBackEnd: async () => {}\n});\nexport default GameContext;","map":{"version":3,"sources":["C:/Users/Shroom/IdeaProjects/RoborallyFrontend/roborally_frontend/src/context/GameContext.ts"],"names":["createContext","GameContext","games","selectGame","deleteGame","unselectGame","startGame","endGame","createGame","createPlayer","loaded","board","playerDtos","spaceDtos","boardId","boardName","currentPlayerDto","undefined","height","width","setCurrentPlayerOnSpace","switchCurrentPlayer","user","playerId","playerName","validateUser","changeUserID","setCurrentPlayerInBackend","addUserToBackEnd"],"mappings":"AAAA,SAASA,aAAT,QAA8B,OAA9B;AA6BA;AACA;AAEA,MAAMC,WAAW,gBAAGD,aAAa,CAAkB;AAC/CE,EAAAA,KAAK,EAAE,EADwC;AAE/CC,EAAAA,UAAU,EAAE,YAAY,CAAG,CAFoB;AAG/CC,EAAAA,UAAU,EAAE,YAAY,CAAG,CAHoB;AAI/CC,EAAAA,YAAY,EAAE,YAAY,CAAG,CAJkB;AAK/CC,EAAAA,SAAS,EAAE,YAAY,CAAG,CALqB;AAM/CC,EAAAA,OAAO,EAAE,YAAY,CAAG,CANuB;AAO/CC,EAAAA,UAAU,EAAE,YAAY,CAAG,CAPoB;AAQ/CC,EAAAA,YAAY,EAAE,YAAY,CAAG,CARkB;AAU/CC,EAAAA,MAAM,EAAE,KAVuC;AAW/CC,EAAAA,KAAK,EAAE;AACHC,IAAAA,UAAU,EAAE,EADT;AAEHC,IAAAA,SAAS,EAAE,EAFR;AAGHC,IAAAA,OAAO,EAAE,CAAC,CAHP;AAIHC,IAAAA,SAAS,EAAE,EAJR;AAKHC,IAAAA,gBAAgB,EAAEC,SALf;AAMHC,IAAAA,MAAM,EAAE,CANL;AAOHC,IAAAA,KAAK,EAAE;AAPJ,GAXwC;AAoB/CC,EAAAA,uBAAuB,EAAE,YAAY,CAAG,CApBO;AAqB/CC,EAAAA,mBAAmB,EAAE,YAAY,CAAG,CArBW;AAsB/CC,EAAAA,IAAI,EAAE;AACFC,IAAAA,QAAQ,EAAE,CADR;AAEFC,IAAAA,UAAU,EAAE;AAFV,GAtByC;AA0B/CC,EAAAA,YAAY,EAAE,YAAY,CAAG,CA1BkB;AA2B/CC,EAAAA,YAAY,EAAE,YAAY,CAAG,CA3BkB;AA4B/CC,EAAAA,yBAAyB,EAAE,YAAY,CAAG,CA5BK;AA6B/CC,EAAAA,gBAAgB,EAAE,YAAY,CAAG;AA7Bc,CAAlB,CAAjC;AAgCA,eAAe3B,WAAf","sourcesContent":["import { createContext } from \"react\";\nimport { Board } from \"../types/Board\";\nimport { Space } from \"../types/Space\";\nimport { Game } from \"../types/Game\";\nimport { User } from \"../types/User\";\n\n\nexport type GameContextType = {\n    games: Game[],\n    selectGame: (game: Game) => Promise<void>,\n    deleteGame: (game: Game) => Promise<void>,\n    startGame: (game: Game) => Promise<void>,\n    createGame: (gameName: String) => Promise<void>,\n    endGame: (game: Game) => Promise<void>,\n    createPlayer: (game: Game) => Promise<void>,\n    unselectGame: () => Promise<void>,\n\n    // Information of game\n    loaded: boolean,\n    board: Board,\n\n    setCurrentPlayerOnSpace: (space: Space) => Promise<void>,\n    switchCurrentPlayer: () => Promise<void>,\n    user: User,\n    validateUser: (name: string) => Promise<void>,\n    changeUserID: (incID: number) => Promise<void>,\n    setCurrentPlayerInBackend: (boardId: number, playerId: number) => Promise<void>,\n    addUserToBackEnd: (gameId: number, usName: string) => Promise<void>\n}\n//Define a new context of type GameContextType\n//Below we define the \"default\" values which are set upon initialization of the context\n\nconst GameContext = createContext<GameContextType>({\n    games: [],\n    selectGame: async () => { },\n    deleteGame: async () => { },\n    unselectGame: async () => { },\n    startGame: async () => { },\n    endGame: async () => { },\n    createGame: async () => { },\n    createPlayer: async () => { },\n\n    loaded: false,\n    board: {\n        playerDtos: [],\n        spaceDtos: [],\n        boardId: -1,\n        boardName: \"\",\n        currentPlayerDto: undefined,\n        height: 0,\n        width: 0\n    },\n    setCurrentPlayerOnSpace: async () => { },\n    switchCurrentPlayer: async () => { },\n    user: {\n        playerId: 0,\n        playerName: \"x\"\n    },\n    validateUser: async () => { },\n    changeUserID: async () => { },\n    setCurrentPlayerInBackend: async () => { },\n    addUserToBackEnd: async () => { }\n});\n\nexport default GameContext"]},"metadata":{},"sourceType":"module"}